



 


package com.wings.adapter;

import com.ibatis.dao.client.DaoManager;
import com.wings.dao.AgentfeeDAO;
import com.wings.ibatis.DaoConfig;
import com.wings.persistence.Agentfee;
import com.wings.persistence.AgentfeeKey;
import com.wings.web.struts.forms.AgentfeeForm;
import java.util.List;
import java.util.ArrayList;
import org.apache.commons.beanutils.BeanUtils;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of cmp20. 
 * It has a set of methods to handle persistence for Agentfee data (i.e. 
 * com.wings.web.struts.AgentfeeForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsAgentfeeDelegate {


   /**
    * Create a new com.wings.web.struts.AgentfeeForm object and persist (i.e. insert) it.
    *
    * @param   agentfeeForm   The object containing the data for the new com.wings.web.struts.AgentfeeForm object
    * @exception   Exception   If the new com.wings.web.struts.AgentfeeForm object cannot be created or persisted.
    */
   public static com.wings.web.struts.forms.AgentfeeForm create (com.wings.web.struts.forms.AgentfeeForm agentfeeForm) throws Exception {
      Agentfee agentfee = new Agentfee();  
      BeanUtils.copyProperties(agentfee, agentfeeForm);
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);      
      agentfeeDAO.insert(agentfee); 
      return agentfeeForm;
   }

   /**
    * Update (i.e. persist) an existing com.wings.web.struts.AgentfeeForm object.
    *
    * @param   agentfeeForm   The com.wings.web.struts.AgentfeeForm object containing the data to be updated
    * @exception   Exception   If the com.wings.web.struts.AgentfeeForm object cannot be updated/persisted.
    */
   public static com.wings.web.struts.forms.AgentfeeForm update (com.wings.web.struts.forms.AgentfeeForm agentfeeForm) throws Exception {
      Agentfee agentfee = new Agentfee();  
      BeanUtils.copyProperties(agentfee, agentfeeForm);
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      agentfeeDAO.updateByPrimaryKey(agentfee);
      return agentfeeForm;
   }

   /**
    * Retrieve an existing com.wings.web.struts.AgentfeeForm object for editing.
    *
    * @param   agentfeeForm   The com.wings.web.struts.AgentfeeForm object containing the data used to retrieve the object (i.e. the primary key info).
    * @exception   Exception   If the com.wings.web.struts.AgentfeeForm object cannot be retrieved.
    */
   public static com.wings.web.struts.forms.AgentfeeForm edit (com.wings.web.struts.forms.AgentfeeForm agentfeeForm) throws Exception {
      AgentfeeKey agentfeeKey = new AgentfeeKey();  
      agentfeeKey.setIdAgentFee(agentfeeForm.getIdAgentFee());      
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      Agentfee agentfee = agentfeeDAO.selectByPrimaryKey(agentfeeKey);
      BeanUtils.copyProperties(agentfeeForm, agentfee);
      return agentfeeForm;
   }

   public static com.wings.web.struts.forms.AgentfeeForm findByName (com.wings.web.struts.forms.AgentfeeForm agentfeeForm) throws Exception {
      Agentfee agentfee = new Agentfee();  
      agentfee.setDescription(agentfeeForm.getDescription());      
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      agentfee = agentfeeDAO.selectByName(agentfee);
      if (agentfee!=null) {
         BeanUtils.copyProperties(agentfeeForm, agentfee);
      } else {
          agentfeeForm = null;
      }      
      return agentfeeForm;
   }

   /**
    * Remove (delete) an existing com.wings.web.struts.AgentfeeForm object.
    *
    * @param   agentfeeForm   The com.wings.web.struts.AgentfeeForm object containing the data to be deleted.
    * @exception   Exception   If the com.wings.web.struts.AgentfeeForm object cannot be removed.
    */  
   public static void remove (com.wings.web.struts.forms.AgentfeeForm agentfeeForm) throws Exception {
      AgentfeeKey agentfeeKey = new AgentfeeKey();  
      agentfeeKey.setIdAgentFee(agentfeeForm.getIdAgentFee());      
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      agentfeeDAO.deleteByPrimaryKey(agentfeeKey);
   }

   /**
    * Retrieve all existing com.wings.web.struts.AgentfeeForm objects.
    *
    * @exception   Exception   If the com.wings.web.struts.AgentfeeForm objects cannot be retrieved.
    */
   public static List findAll (AgentfeeForm agentfeeForm) throws Exception {
      List retVals = new ArrayList();
      Agentfee agentfee = new Agentfee();  
      if (agentfeeForm!=null) {
          if (agentfeeForm.getDescription()!=null) {
             agentfee.setDescription(agentfeeForm.getDescription()+"%");      
          } else {
             agentfee.setDescription("%");
          }
      } else {
         agentfee.setDescription("%");
      }
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      retVals = (List)agentfeeDAO.selectAll(agentfee);
      return retVals;
   }
   
   public static List findAllByJobTypeAndType (AgentfeeForm agentfeeForm) throws Exception {
      List retVals = new ArrayList();
      Agentfee agentfee = new Agentfee();  
      BeanUtils.copyProperties(agentfee, agentfeeForm);
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      retVals = (List)agentfeeDAO.selectByType(agentfee);
      return retVals;
   }

   public static List findAllAI (AgentfeeForm agentfeeForm) throws Exception {
      List retVals = new ArrayList();
      Agentfee agentfee = new Agentfee();  
      if (agentfeeForm!=null) {
          if (agentfeeForm.getDescription()!=null) {
             agentfee.setDescription(agentfeeForm.getDescription()+"%");      
          } else {
             agentfee.setDescription("%");
          }
      } else {
         agentfee.setDescription("%");
      }
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      retVals = (List)agentfeeDAO.selectByAI(agentfee);
      return retVals;
   }
   
   public static List findAllAO (AgentfeeForm agentfeeForm) throws Exception {
      List retVals = new ArrayList();
      Agentfee agentfee = new Agentfee();  
      if (agentfeeForm!=null) {
          if (agentfeeForm.getDescription()!=null) {
             agentfee.setDescription(agentfeeForm.getDescription()+"%");      
          } else {
             agentfee.setDescription("%");
          }
      } else {
         agentfee.setDescription("%");
      }
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      retVals = (List)agentfeeDAO.selectByAO(agentfee);
      return retVals;
   }

   public static List findAllSI (AgentfeeForm agentfeeForm) throws Exception {
      List retVals = new ArrayList();
      Agentfee agentfee = new Agentfee();  
      if (agentfeeForm!=null) {
          if (agentfeeForm.getDescription()!=null) {
             agentfee.setDescription(agentfeeForm.getDescription()+"%");      
          } else {
             agentfee.setDescription("%");
          }
      } else {
         agentfee.setDescription("%");
      }
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      retVals = (List)agentfeeDAO.selectBySI(agentfee);
      return retVals;
   }

   public static List findAllSO (AgentfeeForm agentfeeForm) throws Exception {
      List retVals = new ArrayList();
      Agentfee agentfee = new Agentfee();  
      if (agentfeeForm!=null) {
          if (agentfeeForm.getDescription()!=null) {
             agentfee.setDescription(agentfeeForm.getDescription()+"%");      
          } else {
             agentfee.setDescription("%");
          }
      } else {
         agentfee.setDescription("%");
      }
      AgentfeeDAO agentfeeDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      agentfeeDAO = (AgentfeeDAO)daoMgr.getDao(AgentfeeDAO.class);    
      retVals = (List)agentfeeDAO.selectBySO(agentfee);
      return retVals;
   }
   
   /**
    * Retrieve a set of existing com.wings.web.struts.AgentfeeForm objects for editing.
    *
    * @param   agentfeeForm   The com.wings.web.struts.AgentfeeForm object containing the data used to retrieve the objects (i.e. the criteria for the retrieval).
    * @exception   Exception   If the com.wings.web.struts.AgentfeeForm objects cannot be retrieved.
    */
   public static List select (com.wings.web.struts.forms.AgentfeeForm agentfeeForm) throws Exception {
      List retVals = new ArrayList();
      
      return retVals;
   }

}
