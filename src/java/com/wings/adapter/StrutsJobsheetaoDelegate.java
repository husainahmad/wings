



 


package com.wings.adapter;

import com.ibatis.dao.client.DaoManager;
import com.wings.dao.JobsheetaoDAO;
import com.wings.ibatis.DaoConfig;
import com.wings.persistence.Jobsheetao;
import com.wings.persistence.JobsheetaoKey;
import com.wings.web.struts.forms.JobsheetaoForm;
import java.util.List;
import java.util.ArrayList;
import org.apache.commons.beanutils.BeanUtils;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of cmp20. 
 * It has a set of methods to handle persistence for Jobsheetao data (i.e. 
 * com.wings.web.struts.JobsheetaoForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsJobsheetaoDelegate {


   
   public static com.wings.web.struts.forms.JobsheetaoForm create (com.wings.web.struts.forms.JobsheetaoForm jobsheetaoForm) throws Exception {
      Jobsheetao jobsheetao = new Jobsheetao();  
      BeanUtils.copyProperties(jobsheetao, jobsheetaoForm);
      JobsheetaoDAO jobsheetaoDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      jobsheetaoDAO = (JobsheetaoDAO)daoMgr.getDao(JobsheetaoDAO.class);      
      jobsheetaoDAO.insert(jobsheetao);
      return jobsheetaoForm;
   }

  
   public static com.wings.web.struts.forms.JobsheetaoForm update (com.wings.web.struts.forms.JobsheetaoForm jobsheetaoForm) throws Exception {
      Jobsheetao jobsheetao = new Jobsheetao();  
      BeanUtils.copyProperties(jobsheetao, jobsheetaoForm);
      jobsheetao.setIdJobSheetAO(jobsheetaoForm.getIdJobSheetAo());
      JobsheetaoDAO jobsheetaoDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      jobsheetaoDAO = (JobsheetaoDAO)daoMgr.getDao(JobsheetaoDAO.class);      
      jobsheetaoDAO.updateByPrimaryKey(jobsheetao);
      return jobsheetaoForm;      
   }

  
   public static com.wings.web.struts.forms.JobsheetaoForm edit (com.wings.web.struts.forms.JobsheetaoForm jobsheetaoForm) throws Exception {
       JobsheetaoKey jobsheetaoKey = new JobsheetaoKey();  
      jobsheetaoKey.setIdJobSheetAO(jobsheetaoForm.getIdJobSheetAo());      
      JobsheetaoDAO jobsheetaoDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      jobsheetaoDAO = (JobsheetaoDAO)daoMgr.getDao(JobsheetaoDAO.class);        
      Jobsheetao jobsheetao = jobsheetaoDAO.selectByPrimaryKey(jobsheetaoKey);
      BeanUtils.copyProperties(jobsheetaoForm, jobsheetao);
      jobsheetaoForm.setIdJobSheetAo(jobsheetao.getIdJobSheetAO());
      return jobsheetaoForm;
   }

    
   public static void remove (com.wings.web.struts.forms.JobsheetaoForm jobsheetaoForm) throws Exception {
      JobsheetaoKey jobsheetaoKey = new JobsheetaoKey();  
      jobsheetaoKey.setIdJobSheetAO(jobsheetaoForm.getIdJobSheetAo());      
      JobsheetaoDAO jobsheetaoDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      jobsheetaoDAO = (JobsheetaoDAO)daoMgr.getDao(JobsheetaoDAO.class);        
      jobsheetaoDAO.deleteByPrimaryKey(jobsheetaoKey);
   }

   public static void removeByIdJobSheet (com.wings.persistence.JobsheetKey key) throws Exception {         
      JobsheetaoDAO jobsheetaoDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      jobsheetaoDAO = (JobsheetaoDAO)daoMgr.getDao(JobsheetaoDAO.class);        
      jobsheetaoDAO.deleteByIdJobSheet(key);
   }
   
   public static List findAll () throws Exception {
      List retVals = new ArrayList();
      JobsheetaoDAO jobsheetaoDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      jobsheetaoDAO = (JobsheetaoDAO)daoMgr.getDao(JobsheetaoDAO.class);        
      retVals = jobsheetaoDAO.selectAll();
      return retVals;
   }

 
   public static List select (com.wings.web.struts.forms.JobsheetaoForm jobsheetaoForm) throws Exception {
      List retVals = new ArrayList();
      
      return retVals;
   }

    public static JobsheetaoForm editByIdJobsheet(JobsheetaoForm jobsheetaoForm) throws Exception {
      Jobsheetao jobsheetao = new Jobsheetao();  
      BeanUtils.copyProperties(jobsheetao, jobsheetaoForm);     
      JobsheetaoDAO jobsheetaoDAO;
      DaoManager daoMgr = DaoConfig.getDaoManager();   
      jobsheetaoDAO = (JobsheetaoDAO)daoMgr.getDao(JobsheetaoDAO.class);      
      jobsheetao = jobsheetaoDAO.selectByIdJobSheet(jobsheetao);
      if (jobsheetao!=null) {
         BeanUtils.copyProperties(jobsheetaoForm, jobsheetao);
         jobsheetaoForm.setIdJobSheetAo(jobsheetao.getIdJobSheetAO());
      }            
      return jobsheetaoForm;
    }

}
