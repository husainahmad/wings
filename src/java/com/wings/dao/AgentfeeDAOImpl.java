package com.wings.dao;


import com.wings.persistence.AgentfeeKey;
import com.ibatis.dao.client.DaoManager;
import java.util.List;
import com.wings.persistence.Agentfee;
import com.ibatis.dao.client.template.SqlMapDaoTemplate;

public class AgentfeeDAOImpl extends SqlMapDaoTemplate implements AgentfeeDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table agentfee
     *
     * @abatorgenerated Thu May 08 01:00:23 PDT 2008
     */
    public AgentfeeDAOImpl(DaoManager daoManager) {
        super(daoManager);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table agentfee
     *
     * @abatorgenerated Thu May 08 01:00:24 PDT 2008
     */
    public void insert(Agentfee record) {
        insert("agentfee_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table agentfee
     *
     * @abatorgenerated Thu May 08 01:00:24 PDT 2008
     */
    public int updateByPrimaryKey(Agentfee record) {
        int rows = update("agentfee_updateByPrimaryKey", record);

        return rows;
    }

   
    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table agentfee
     *
     * @abatorgenerated Thu May 08 01:00:24 PDT 2008
     */
    public Agentfee selectByPrimaryKey(AgentfeeKey key) {
        Agentfee record = (Agentfee) queryForObject("agentfee_selectByPrimaryKey", key);

        return record;
    }

  

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table agentfee
     *
     * @abatorgenerated Thu May 08 01:00:24 PDT 2008
     */
    public int deleteByPrimaryKey(AgentfeeKey key) {
        int rows = delete("agentfee_deleteByPrimaryKey", key);

        return rows;
    }

    public List selectAll(Agentfee agentfee) {
        List records = (List) queryForList("agentfee_selectAll", agentfee);

        return records;
    }

    public Agentfee selectByName(Agentfee agentfee) {
        Agentfee record = (Agentfee) queryForObject("agentfee_selectByName", agentfee);

        return record;
    }

    public List selectByAI(Agentfee agentfee) {
        List records = (List) queryForList("agentfee_selectByAI", agentfee);

        return records;
    }

    public List selectByAO(Agentfee agentfee) {
        List records = (List) queryForList("agentfee_selectByAO", agentfee);

        return records;
    }

    public List selectBySI(Agentfee agentfee) {
        List records = (List) queryForList("agentfee_selectBySI", agentfee);

        return records;
    }

    public List selectBySO(Agentfee agentfee) {
        List records = (List) queryForList("agentfee_selectBySO", agentfee);

        return records;
    }

    public List selectByType(Agentfee agentfee) {
        List records = (List) queryForList("agentfee_selectByJobType", agentfee);

        return records;
    }
   
}
